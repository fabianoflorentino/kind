---
kind: Cluster
apiVersion: kind.x-k8s.io/v1alpha4
name: lab

featureGates:
  "CSIMigration": true

runtimeConfig:
  "api/alpha": false

networking:
  disableDefaultCNI: true
  kubeProxyMode: ipvs
  ipFamily: ipv4
  apiServerAddress: "172.16.252.100"
  apiServerPort: 6443
  podSubnet: "10.244.0.0/16"
  serviceSubnet: "10.96.0.0/12"

nodes:
  - role: control-plane
    kubeadmConfigPatches:
    - |
      kind: InitConfiguration
      nodeRegistration:
        kubeletExtraArgs:
          node-labels: "ingress-ready=true"
    extraPortMappings:
    - containerPort: 80
      hostPort: 8081
      listenAddress: "172.16.252.100"
      protocol: TCP
    - containerPort: 443
      hostPort: 8441
      listenAddress: "172.16.252.100"
      protocol: TCP
    extraMounts:
    - hostPath: /mnt/storage/vol1
      containerPath: /opt/vol1
      readOnly: true
      selinuxRelabel: false
      propagation: HostToContainer
  - role: control-plane
    kubeadmConfigPatches:
    - |
      kind: InitConfiguration
      nodeRegistration:
        kubeletExtraArgs:
          node-labels: "ingress-ready=true"
    extraPortMappings:
    - containerPort: 80
      hostPort: 8082
      listenAddress: "172.16.252.100"
      protocol: TCP
    - containerPort: 443
      hostPort: 8442
      listenAddress: "172.16.252.100"
      protocol: TCP
    extraMounts:
    - hostPath: /mnt/storage/vol1
      containerPath: /opt/vol1
      readOnly: true
      selinuxRelabel: false
      propagation: HostToContainer
  - role: control-plane
    kubeadmConfigPatches:
    - |
      kind: InitConfiguration
      nodeRegistration:
        kubeletExtraArgs:
          node-labels: "ingress-ready=true"
    extraPortMappings:
    - containerPort: 80
      hostPort: 8083
      listenAddress: "172.16.252.100"
      protocol: TCP
    - containerPort: 443
      hostPort: 8443
      listenAddress: "172.16.252.100"
      protocol: TCP
    extraMounts:
    - hostPath: /mnt/storage/vol1
      containerPath: /opt/vol1
      readOnly: true
      selinuxRelabel: false
      propagation: HostToContainer
  - role: worker
  - role: worker
  - role: worker